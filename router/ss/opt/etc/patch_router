#!/bin/sh

# 确保当切换不同的代理时, 代理自己的 ip 一定加入白名单
remote_server_ip=$(cat /opt/etc/shadowsocks.json |grep 'server"' |cut -d':' -f2|cut -d'"' -f2)
ipset_protocal_version=$(ipset -v |grep -o 'version.*[0-9]' |head -n1 |cut -d' ' -f2)

if [ "$ipset_protocal_version" == 6 ]; then
    ipset add CHINAIP $remote_server_ip
else
    ipset -q -A CHINAIP $remote_server_ip
fi

chmod +x /opt/etc/init.d/S22shadowsocks
/opt/etc/init.d/S22shadowsocks restart

dnsmasq_dir=/opt/etc/dnsmasq.d

if [ -d "$dnsmasq_dir" ]; then
    # 为默认的 /etc/dnsmasq.conf 新增配置.
    if ! grep -qs "^conf-dir=$dnsmasq_dir/,\*\.conf$" /etc/dnsmasq.conf; then
        echo "conf-dir=$dnsmasq_dir/,*.conf" >> /etc/dnsmasq.conf
    fi

    # # 开启日志.
    # if ! grep -qs "^log-queries$" /etc/dnsmasq.conf; then
    #     echo 'log-queries' >> /etc/dnsmasq.conf
    # fi

    # # 输出日志到 /var/log/dnsmasq.log
    # if ! grep -qs "^log-facility=/var/log/dnsmasq\.log$" /etc/dnsmasq.conf; then
    #     echo 'log-facility=/var/log/dnsmasq.log' >> /etc/dnsmasq.conf
    # fi

    accelerated=accelerated-domains.china.conf
    google=google.china.conf
    apple=apple.china.conf

    user_domain_name_whitelist=/opt/etc/user_domain_name_whitelist.txt
    user_domain_name_blocklist=/opt/etc/user_domain_name_blocklist.txt
    user_domain_name_gfwlist=/opt/etc/user_domain_name_gfwlist.txt

    if ! [ -s $dnsmasq_dir/$accelerated.bak ]; then
        /opt/etc/update_dns_whitelist
    fi

    if ! [ -s /opt/etc/chinadns_chnroute.txt ]; then
        /opt/etc/update_ip_whitelist
    fi

    default_dns_ip=127.0.0.1

    sed "s#114\.114\.114\.114#${default_dns_ip}#" $dnsmasq_dir/$accelerated.bak > $dnsmasq_dir/$accelerated
    sed "s#114\.114\.114\.114#${default_dns_ip}#" $dnsmasq_dir/$google.bak > $dnsmasq_dir/$google
    sed "s#114\.114\.114\.114#${default_dns_ip}#" $dnsmasq_dir/$apple.bak > $dnsmasq_dir/$apple

    OLDIFS="$IFS" && IFS=$'\n'
    if [ -f $user_domain_name_whitelist ]; then
        rm -f $dnsmasq_dir/whitelist-domains.china.conf
        for i in $(cat $user_domain_name_whitelist|grep -v '^#'); do
            echo "server=/${i}/${default_dns_ip}" >> $dnsmasq_dir/whitelist-domains.china.conf
        done
    fi

    if [ -f $user_domain_name_blocklist ]; then
        rm -f $dnsmasq_dir/blacklist-domains.china.conf
        for i in $(cat $user_domain_name_blocklist|grep -v '^#'); do
            echo "address=/${i}/127.0.0.1" >> $dnsmasq_dir/blocklist-domains.china.conf
        done
    fi

    if [ -f $user_domain_name_gfwlist ]; then
        for i in $(cat $user_domain_name_gfwlist|grep -v '^#'); do
            sed -i "/server=\/${i}\/.*/d" $dnsmasq_dir/$accelerated
            sed -i "/server=\/${i}\/.*/d" $dnsmasq_dir/$google
            sed -i "/server=\/${i}\/.*/d" $dnsmasq_dir/$apple
        done
    fi
    IFS=$OLDIFS

    chmod +x /opt/etc/restart_dnsmasq && /opt/etc/restart_dnsmasq
fi

/opt/etc/apply_ipset_rule.sh
/opt/etc/toggle_proxy.sh enable

if [ -e /opt/etc/dnscrypt-proxy.sh -a -e /opt/etc/init.d/S09dnscrypt-proxy ]; then
    source /opt/etc/dnscrypt-proxy.sh

    [ "$tcp_only" == true ] && tcp_only_arg='-T'

    sed -i "s#^ARGS=.*#ARGS=\"${tcp_only_arg} -a 127.0.0.1:65053 -r ${resolver_address_with_port} -N ${provider_name} -k ${provider_key} -l /var/log/dnscrypt-proxy.log\"#" /opt/etc/init.d/S09dnscrypt-proxy
    /opt/etc/init.d/S09dnscrypt-proxy restart
elif [ -e /opt/etc/dnscrypt-proxy.toml -a -e /opt/etc/init.d/S09dnscrypt-proxy2 ]; then
    echo 'Use dnscrypt-proxy2 red fish source.'
    echo 'Checking config file.'
    set -e
    dnscrypt-proxy -check -config /opt/etc/dnscrypt-proxy.toml
    set +e
    /opt/etc/init.d/S09dnscrypt-proxy2 restart
fi

touch /tmp/patch_router_is_run
